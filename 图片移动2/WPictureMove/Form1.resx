<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>